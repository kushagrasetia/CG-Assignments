                          MongoDB Basic Assignments Solutions
Use mongo_practice;
db.createCollection(‘movies’);
db.movies.insert(
{
title:“Fight Club”, writer: “Chuck Palahniuko” , year:“1999” , actors:[“Brad Pitt”, “Edward Nortan”]
} ,
{
title:“Pulp Fiction”, writer :“Quentin Tarantino” , year:“1994” , actors:[“John Travolta” , “Uma Thurman”]
} , 
{
 Title:“Inglorious Basterds” , writer:“Quentin Tarantino” , year:(“2009” , actors:[“Brad Pitt” , “Diane Kruger”,“Eli Roth”]
 } , 
{
title:“The Hobbit: An unexpected Journey”,writer:“J.R.R. Tolkein”,year:“2012”,franchise:“The Hobbit”
} , 
{
title:“The Hobbit :An Desolation of Smaug”,writer:“J.R.R. Tolkein”,year:“2013”,franchise:“The Hobbit”
} , 
{ 
Title:“The Hobbit :The Battle Of the Five Armies”,writer:“J.R.R. Tolkein”,year:“2012”,franchise:“The Hobbit”,synopsis: “Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness.”
} ,
{
title: “Pee Wee Herman's Big Adventure”
} , 

{
title: “Avatar”
}
)

Query /Find Documents…
1.	 db.movies.find().pretty();
2.	db.movies.find({writer: “Quentin Tarantino”}).pretty();
3.	db.movies.find({actors: “Brad Pitt”}).pretty();
4.	db.movies.find({franchise: “The Hobbit”}).pretty();
5.	db.movies.find({$and:[{year:{$lt: “2000”}},{year:{$gt: “1989”}}]}).pretty();
6.	db.movies.find({$or:[{year:{$lt: “2000”}},{year:{$gt: “2010”}}]}).pretty();

Update Documents…
1.	db.movies.updateOne({title: “The Hobbit:An Unexpected Journey”},{$set:{synopsis: “A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug.”}});
2.	db.movies.updateOne({title: “The Hobbit:An Desolation of Smaug”},{$set:{synopsis: “ The dwarves,along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring.”}});
3.	db.movies.update({title: “Pulp Fiction”},{$push:{actors: “Samuel L. Jackson”}});


Text Search…
 db.movies.createIndex({synopsis: “text”});
1.db.movies.find({$synopsis:{$regex: “Bilbo”}}).pretty();
2.db.movies.find({synopsis:{$regex: “Gandalf”}}).pretty();
3. db.movies.find({$and:[{synopsis:{$regex: “Bilbo”}},{synopsis:{$not:/Gandalf/}}]}).pretty();
4.db.movies.find({$or:[{synopsis:{$regex: “dwarves”}},{synopsis:{$regex: “hobbit”}}]}).pretty();
5.db.movies.find({$and:[{synopsis:{$regex: “gold”}},{synopsis:{$regex: “dragon”}}]}).pretty();

Delete Documents…

1.db.movies.remove({title: “Pee Wee Herman's Big Adventure”});

2.db.movies.remove(title: “Avatar”);


Relationships…

db.createCollection(‘users’);
db.users.insert({username: “GoodGuyGreg”,first_name: “GoodGuy”,last_name: “Greg”});
db.users.insert({username: “ScumbagSteve”,fullname:{first: “Scumbag”,last: “Steve”}});


db.createCollection(‘posts’);
db.posts.insert({username: “GoodGuyGreg”, title: “Passes out at Party”, body: “Wakes up early and cleans house”});
db.posts.insert({ username: “GoodGuyGreg”, title: “Steals your identity”, body: “Raises your credit score”});
db.posts.insert({username: “GoodGuyGreg”, title: “Reports a bug in your code”, body:”Sends you a pull request”});
db.posts.insert({ username: “ScumbagSteve”, title: “Borrows something”, body: “Sells it”});

db.posts.insert({ username: “ScumbagSteve”, title: “Borrows everything”, body: “The end”});

db.posts.insert({username: “ScumbagSteve”, title: “Forks your repo on github”, body: “Sets to private”});

db.createCollection(‘comments’);
db.comments.insert({ username: “GoodGuyGreg”, comment: “Hope you got a good deal!”, post:ObjectId(“6004fdeb14a2f9d609e6abe4”)});
db.comments.insert({username: “GoodGuyGreg”, comment: “What's mine is yours!”, post:ObjectId(“6004fdf614a2f9d609e6abe5”)});
db.comments.insert({username: “GoodGuyGreg”, comment: “Don't violate the licensing agreement!", post:ObjectId(“6004fdff14a2f9d609e6abe6“)});
db.comments.insert({username: “ScumbagSteve”, comment: “It still isn't clean”, post:ObjectId(“6004fdc314a2f9d609e6abe1”)});
db.comments.insert({username: “ScumbagSteve”, comment: “Denied your PR cause I found a hack”, post:ObjectId( “6004fddf14a2f9d609e6abe3”)});

Querying Related Collections…

1. db.users.find().pretty();
2. db.posts.find().pretty();
3. db.posts.find({username: “GoodGuyGreg”}).pretty();
4. db.posts.find({username: “ScumbagSteve”}).pretty();
5. db.comments.find().pretty();
6. db.comments.find({username: “GoodGuyGreg”}).pretty();
7. db.comments.find({username: “ScumbagSteve”}).pretty();
8. db.comments.find({post:ObjectId( “6004fddf14a2f9d609e6abe3”)}).pretty();

